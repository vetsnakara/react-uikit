@use "../../functions";

$color__item: #0E65B7 !default;
$background__item: #0E65B7 !default;
$gap: functions.px(10) !default;
$ordered-label-size: functions.px(16) !default; // 21 by design
$subunordered-label-size: functions.px(16) !default;
$unordered-label-size: functions.px(5);
$index: 0;
$alphabet: "а", "б", "в", "г", "д", "e", "ж", "з", "и", "к", "л", "м", "н", "о", "п", "р", "с", "т", "у", "ф", "х", "ц",
  "ч", "ш", "щ", "ъ", "ы", "ь", "э", "ю", "я";

.list {
  line-height: 1.5;
  list-style-type: none;
  margin: 0;
  padding: 0;

  &:not(:last-child) {
    margin-bottom: $gap * 2;
  }

  &__item {
    $label-area: $gap + $unordered-label-size;

    padding-left: $label-area;

    &:not(:last-child) {
      margin-bottom: $gap * 0.4;
    }

    &::before {
      background: no-repeat left center
        functions.inlineSVG(
          "<svg width='" + $unordered-label-size + "' height='" + $unordered-label-size + "' fill='" +
          $background__item +
          "' xmlns='http://www.w3.org/2000/svg'><circle cx='2.5' cy='2.5' r='2.5'/></svg>"
        );
      color: $color__item;
      content: "";
      float: left;
      height: 1.5em;
      margin-left: -$label-area;
      width: $label-area;
    }
  }

  &_ordered {
    counter-reset: point;
  }

  &_ordered > &__item,
  &_ordered-letter > &__item,
  &_ordered-bracket > &__item {
    $label-area: $gap + $ordered-label-size;

    margin-left: $label-area;
    padding-left: 0;

    &::before {
      background: none;
      content: counters(point, ".") ".";
      counter-increment: point;
      font-weight: 500;
      margin-left: -$label-area;
      margin-right: $gap - 5;
      width: auto;
    }
  }

  &_ordered-bracket {
    counter-reset: bracket;
  }

  &_ordered-bracket > &__item::before {
    content: counter(bracket) ")";
    counter-increment: bracket;
  }

  &_ordered-letter {
    counter-reset: letter;
  }

  @for $index from 1 through length($alphabet) {
    $cnt: nth($alphabet, $index);

    &_ordered-letter > &__item:nth-child(#{$index})::before,
    &_ordered-letter > &__item[value="#{$index}"]::before {
      content: $cnt;
      counter-increment: letter;
    }
  }

  & &:not(&_ordered):not(&_ordered-letter):not(&_ordered-bracket) > &__item {
    $label-area: $gap + $subunordered-label-size;

    padding-left: $label-area;

    &::before {
      background: none;
      content: "—";
      margin-left: -$label-area;
      width: $label-area;
    }
  }

  // Set a custom value by [start]
  @for $point from 1 to 100 {
    &[start="#{$point}"] > &__item:first-child {
      counter-increment: point #{$point};
    }
  }

  @media print {

    & {
      list-style-image: functions.inlineSVG(
        "<svg width='" + $unordered-label-size + "' height='" + ($unordered-label-size + 2) + "' fill='" +
        $background__item + "' xmlns='http://www.w3.org/2000/svg'><circle cx='2.5' cy='2.5' r='2.5'/></svg>"
      );
    }

    &_ordered,
    & &:not(&_ordered) {
      list-style-image: none;
    }

    &__item::before {
      background-image: none;
    }
  }
}

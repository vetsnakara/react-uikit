@use "../../functions";

$gap: functions.px(10) !default;
$radius: functions.px(8) !default;
$background: #EDF5FC !default;
$background__dropdown-item: #FFFFFF !default;
$color_disabled: #CACCCF !default;
$background_disabled: #F9F9FA !default;
$font-size-small: functions.px(14) !default;
$color__close: #52575C !default;
$color__button: #52575C !default;
$color-arrow: #014898 !default;
$color__button_active: #1E88DB !default;
$box-shadow-focus: 0 0 0 functions.px(3) #B4D9F3 !default;

@mixin arrow-color($color-arrow) {
  background-image: functions.inlineSVG(
    '<svg width="10" height="5" viewBox="0 0 10 5" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M0 5L5 0L10 5H0Z" fill="' + #{$color-arrow}+
    '"/></svg>'
  );
}

.tag {
  align-items: center;
  background: $background;
  border-radius: $radius;
  box-sizing: border-box;
  display: flex;
  justify-content: space-between;
  padding-right: $gap;

  &_disabled {
    background: $background_disabled;
    cursor: default;
  }

  &__close {
    color: $color__close;
    flex: 0 0 auto;
  }

  &__close &__close-icon {
    height: $gap * 1.6;
    min-width: $gap * 1.6;
    width: $gap * 1.6;
  }

  &__dropdown {
    font-size: $font-size-small;
  }

  &__dropdown-item {
    background: $background__dropdown-item;
    font-size: $font-size-small;
    max-width: functions.px(300);
    padding: $gap $gap * 1.5;
  }

  &__text,
  &__button {
    box-sizing: border-box;
    color: $color__button;
    font-size: $font-size-small;
    font-weight: 500;
    line-height: $gap * 1.6;
    padding: $gap * 1.1 $gap * 1.4 $gap * 1.1 $gap * 1.4;
  }

  &__button {
    background: transparent;
    border: none;
    color: $color-arrow;
    cursor: pointer;
    padding-right: $gap * 3;
    position: relative;

    &::after {
      content: "";
      height: functions.px(5);
      position: absolute;
      right: functions.px(14);
      top: 50%;
      transform: translateY(-50%) rotate(180deg);
      width: functions.px(10);

      @include arrow-color($color-arrow);
    }

    &[aria-expanded="true"] {

      &::after {
        transform: translateY(-50%) rotate(0);
      }
    }

    &:hover,
    &:active {
      color: $color__button_active;

      &:after {
        @include arrow-color($color__button_active);
      }
    }

    &:focus {
      box-shadow: $box-shadow-focus;
      outline: none;
    }

    &:focus:not(:focus-visible) {
      box-shadow: none;
    }

    &:focus-visible {
      box-shadow: $box-shadow-focus;
    }

    &_no-arrow::after {
      display: none;
    }
  }

  &_disabled &__button,
  &_disabled &__text {
    color: $color_disabled;
    cursor: default;

    &::after {
      @include arrow-color($color_disabled);
    }
  }
}

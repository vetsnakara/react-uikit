$control: rgb(31, 53, 136) !default;
$control-active: rgb(255, 68, 82) !default;
$arrow-gap: 5px !default;
$pin-position: 0.75 !default; // Range [0 ... 1]

// Arrow position math
$sqrt-of-two: 1.4142135624;
$control-size: 1.25em;
$arrow-size: 0.5em;

$arrow-size-rotated: $sqrt-of-two * $arrow-size;
$arrow-overflow: ($arrow-size-rotated - $arrow-size) / 2;
$arrow-up-pin-position: $arrow-size-rotated * (1 - $pin-position);
$arrow-down-pin-position: $arrow-size-rotated * $pin-position;
$arrow-x: $arrow-overflow;
$arrow-y: $arrow-overflow + $control-size * 0.5;
$arrow-up-position: $arrow-x, $arrow-y - $arrow-up-pin-position;
$arrow-down-position: $arrow-x, $arrow-y - $arrow-down-pin-position;

%arrow {
  width: $arrow-size;
  height: $arrow-size;
  box-sizing: border-box;
  border-top: 2px solid;
  border-left: 2px solid;
  content: "";
  display: inline-block;
}

.spoiler {

  &__control[data-target],
  &__control[href^="#"] {
    text-decoration: none;
    padding: 0 0 0 calc(#{$arrow-overflow + $arrow-size-rotated} + #{$arrow-gap});
    border: 0;
    color: $control;
    cursor: pointer;
    border-bottom: 1px dashed currentColor;
    background: transparent;
    display: inline-block;
    line-height: $control-size;
    position: relative;

    &:hover,
    &:focus {
      color: $control-active;
      text-decoration: none;
    }

    &::after {
      @extend %arrow; //TODO: fix extend
      transition: 0.3s transform;
      transform: translate($arrow-up-position) rotate(45deg);
      position: absolute;
      left: 0;
      top: 0;
    }

    @media (max-width: 500px) {
      display: block;
    }
  }

  &__control:not([aria-expanded="true"])::after {
    transform: translate($arrow-down-position) rotate(225deg);
  }

  &__control:not([data-target]):not([href^="#"]) {
    pointer-events: none;
    opacity: 0.6;
  }

  &:not(&_active) {
    display: none;
  }

  &_animated {
    height: 0;
    margin: 0;
    position: relative;
    overflow: hidden;
    transition: height 0.3s ease, margin 0.3s ease;
  }
}
